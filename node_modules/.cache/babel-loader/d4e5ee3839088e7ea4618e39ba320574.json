{"ast":null,"code":"// Use the fastest possible means to execute a task in a future turn\n// of the event loop.\n// linked list of tasks (single, with head node)\nvar head = {\n  task: void 0,\n  next: null\n};\nvar tail = head;\nvar flushing = false;\nvar requestFlush = void 0;\nvar isNodeJS = false;\n\nfunction flush() {\n  /* jshint loopfunc: true */\n  while (head.next) {\n    head = head.next;\n    var task = head.task;\n    head.task = void 0;\n    var domain = head.domain;\n\n    if (domain) {\n      head.domain = void 0;\n      domain.enter();\n    }\n\n    try {\n      task();\n    } catch (e) {\n      if (isNodeJS) {\n        // In node, uncaught exceptions are considered fatal errors.\n        // Re-throw them synchronously to interrupt flushing!\n        // Ensure continuation if the uncaught exception is suppressed\n        // listening \"uncaughtException\" events (as domains does).\n        // Continue in next event to avoid tick recursion.\n        if (domain) {\n          domain.exit();\n        }\n\n        setTimeout(flush, 0);\n\n        if (domain) {\n          domain.enter();\n        }\n\n        throw e;\n      } else {\n        // In browsers, uncaught exceptions are not fatal.\n        // Re-throw them asynchronously to avoid slow-downs.\n        setTimeout(function () {\n          throw e;\n        }, 0);\n      }\n    }\n\n    if (domain) {\n      domain.exit();\n    }\n  }\n\n  flushing = false;\n}\n\nif (typeof process !== \"undefined\" && process.nextTick) {\n  // Node.js before 0.9. Note that some fake-Node environments, like the\n  // Mocha test runner, introduce a `process` global without a `nextTick`.\n  isNodeJS = true;\n\n  requestFlush = function requestFlush() {\n    process.nextTick(flush);\n  };\n} else if (typeof setImmediate === \"function\") {\n  // In IE10, Node.js 0.9+, or https://github.com/NobleJS/setImmediate\n  if (typeof window !== \"undefined\") {\n    requestFlush = setImmediate.bind(window, flush);\n  } else {\n    requestFlush = function requestFlush() {\n      setImmediate(flush);\n    };\n  }\n} else if (typeof MessageChannel !== \"undefined\") {\n  // modern browsers\n  // http://www.nonblocking.io/2011/06/windownexttick.html\n  var channel = new MessageChannel();\n  channel.port1.onmessage = flush;\n\n  requestFlush = function requestFlush() {\n    channel.port2.postMessage(0);\n  };\n} else {\n  // old browsers\n  requestFlush = function requestFlush() {\n    setTimeout(flush, 0);\n  };\n}\n\nfunction asap(task) {\n  tail = tail.next = {\n    task: task,\n    domain: isNodeJS && process.domain,\n    next: null\n  };\n\n  if (!flushing) {\n    flushing = true;\n    requestFlush();\n  }\n}\n\n;\nmodule.exports = asap;","map":null,"metadata":{},"sourceType":"script"}